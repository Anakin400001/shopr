{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Home","id","fetchedUser","go","openBase","left","photo_200","src","first_name","last_name","className","style","display","onClick","size","stretched","marginRight","mode","osName","platform","Persik","props","data-to","IOS","persik","alt","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","setSubPanel","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","osname","e","currentTarget","dataset","to","onClose","autoclose","ReactDOM","render","getElementById"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,oC,kkBCiD5BC,G,MArCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAQC,GAAX,EAAOC,GAAP,EAAWD,aAAaE,EAAxB,EAAwBA,SAAxB,OACJ,kBAAC,IAAD,CAAOH,GAAIA,GACPC,GAAe,kBAAC,IAAD,CAChBG,KAAMH,EAAYI,UAAY,kBAAC,IAAD,CAAQC,IAAKL,EAAYI,YAAe,MADtD,UAGVJ,EAAYM,WAHF,YAGgBN,EAAYO,YAE5C,4BAAQC,UAAU,UAAS,6BAA3B,0FACA,6BACN,kBAAC,IAAD,CAAKC,MAAO,CAACC,QAAS,SACpBR,GAAY,kBAAC,IAAD,CAAQS,QAAST,EAAUU,KAAK,IAAIC,WAAS,EAACJ,MAAO,CAAEK,YAAa,IAApE,wCACb,kBAAC,IAAD,CAAQF,KAAK,IAAIC,WAAS,EAACE,KAAK,aAAhC,+CAEF,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQP,UAAU,UAAUO,KAAK,YAAjC,gDAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQP,UAAU,SAASO,KAAK,YAAhC,mD,wEClBDC,EAASC,cAoBAC,EAlBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOpB,GAAIoB,EAAMpB,IAChB,kBAAC,IAAD,CACCI,KAAM,kBAAC,IAAD,CAAmBQ,QAASQ,EAAMlB,GAAImB,UAAQ,QAClDJ,IAAWK,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKb,UAAU,SAASH,IAAKiB,IAAQC,IAAI,qBCwC5BC,EArDH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVzB,EAFU,KAEG4B,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAeb,KAAK,WAHxC,mBAGViB,EAHU,KAGFC,EAHE,OAIsBL,mBAAS,MAJ/B,mBAIOM,GAJP,WAMjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECR,EAAQQ,GACRN,EAAU,MAHX,4CARe,sBACfI,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEI,IAAMC,EAASjC,cAmBhBhB,EAAK,SAAAkD,GACVxB,EAAewB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAM5B,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAM9B,GAAG,OAAOC,YAAaA,EAAaC,GAAIA,EAAIC,SAvB5B,WACb6B,EACE,kBAAC,IAAD,CAAawB,QAAS,kBAAMxB,EAAY,QACtC,kBAAC,IAAD,CAAiByB,WAAS,GAA1B,yCAGF,kBAAC,IAAD,CAAiBA,WAAS,GAA1B,2DAGA,kBAAC,IAAD,CAAiBA,WAAS,GAA1B,2DAGLN,IAAW7B,KAAO,kBAAC,IAAD,CAAiBmC,WAAS,EAACzC,KAAK,UAAhC,yDAYxB,kBAAC,EAAD,CAAQhB,GAAG,SAASE,GAAIA,MClD3BiC,IAAOC,KAAK,gBAEZsB,IAASC,OAAO,kBAAC,EAAD,MAAShB,SAASiB,eAAe,U","file":"static/js/main.88299fba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport { withPlatform, ANDROID, IOS } from '@vkontakte/vkui'\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport './Persik.css';\n\nconst Home = ({ id, go, fetchedUser, openBase }) => (\n         <Panel id={id}>\n            {fetchedUser && <PanelHeader\n            left={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n            >\n              {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n            </PanelHeader>}\n            <center className=\"skypka\"><br/>Скупка • Продажа</center>\n            <br/>\n      <Div style={{display: 'flex'}}>\n       {openBase && <Button onClick={openBase} size=\"l\" stretched style={{ marginRight: 8 }}>Купить</Button>}\n       <Button size=\"l\" stretched mode=\"secondary\">Продать</Button>\n     </Div>\n     <br/>\n     <Div>\n       <Button className=\"footer2\" mode=\"tertiary\">Куплено:</Button>\n     </Div>\n     <Div>\n       <Button className=\"footer\" mode=\"tertiary\">Продано:</Button>\n     </Div>\n          </Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n                id: PropTypes.string,\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { ActionSheetItem, ActionSheet, IOS, platform } from '@vkontakte/vkui'\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n        const [subPanel, setSubPanel] = useState(null);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n    \n        const osname = platform();\n\n        const openBase = () => {\n            setSubPanel(\n              <ActionSheet onClose={() => setSubPanel(null)}>\n                <ActionSheetItem autoclose>\n                   По дням\n                </ActionSheetItem>\n              <ActionSheetItem autoclose>\n                  По неделям\n              </ActionSheetItem>\n              <ActionSheetItem autoclose>\n                По месяцам\n            </ActionSheetItem>\n        {osname === IOS && <ActionSheetItem autoclose mode=\"cancel\">Отменить</ActionSheetItem>}\n      </ActionSheet>\n    );\n  }\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} openBase={openBase} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}